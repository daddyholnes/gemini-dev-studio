{
  "name": "mcp-toolkit",
  "version": "0.1.0",
  "description": "A toolkit for managing MCP servers and processing tool calls",
  "type": "module",
  "exports": {
    ".": {
      "import": "./dist/index.js",
      "require": "./dist/index.cjs"
    }
  },
  "types": "./dist/index.d.ts",
  "files": [
    "dist",
    "README.md",
    "docs",
    "examples"
  ],
  "engines": {
    "node": ">=18"
  },
  "scripts": {
    "build": "tsup",
    "dev": "tsup --watch",
    "test": "vitest run",
    "test:watch": "vitest",
    "test:coverage": "vitest run --coverage",
    "test:unit": "vitest run src/tests",
    "test:tools": "vitest run src/tests/tools/test-tools.test.ts",
    "prepublishOnly": "npm test && npm run build",
    "prepare-release": "scripts/prepare-release.sh",
    "check-publish": "scripts/check-publish.sh",
    "version:patch": "scripts/version.sh $(npm --no-git-tag-version version patch | sed 's/v//')",
    "version:minor": "scripts/version.sh $(npm --no-git-tag-version version minor | sed 's/v//')",
    "version:major": "scripts/version.sh $(npm --no-git-tag-version version major | sed 's/v//')"
  },
  "dependencies": {
    "@modelcontextprotocol/sdk": "^1.6.1",
    "@modelcontextprotocol/server-everything": "^2025.1.14",
    "reflect-metadata": "^0.2.2",
    "tsyringe": "^4.8.0",
    "winston": "^3.11.0",
    "zod": "^3.22.4"
  },
  "devDependencies": {
    "@types/node": "^18.18.0",
    "tsup": "^7.2.0",
    "typescript": "^5.3.2",
    "vitest": "^0.34.6"
  },
  "keywords": [
    "mcp",
    "model-context-protocol",
    "llm",
    "toolkit"
  ],
  "author": "Adam Avenir <adam@avenir.party>",
  "license": "MIT",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/adamavenir/mcp-toolkit.git"
  },
  "bugs": {
    "url": "https://github.com/adamavenir/mcp-toolkit/issues"
  },
  "homepage": "https://github.com/adamavenir/mcp-toolkit#readme",
  "vitest": {
    "setupFiles": [
      "src/tests/setup/vitest.setup.ts"
    ],
    "environment": "node",
    "testMatch": [
      "**/*.test.ts"
    ],
    "globals": true,
    "coverage": {
      "reporter": [
        "text",
        "json",
        "html"
      ],
      "exclude": [
        "**/*.test.ts",
        "**/node_modules/**"
      ]
    }
  }
}